"""Завдання 2. Реалізувати двійковий пошук для відсортованого масиву з 
дробовими числами. Написана функція для двійкового пошуку повинна повертати 
кортеж, де першим елементом є кількість ітерацій, потрібних для знаходження 
елемента. Другим елементом має бути "верхня межа" — це найменший елемент, 
який є більшим або рівним заданому значенню."""

def binary_search(arr, x):
    """Функція для двійкового пошуку елемента у відсортованому 
    масиві з дробовими числами."""
    # Початкові індекси для низької та високої межі масиву
    low = 0
    high = len(arr) - 1
    
    # Змінна для підрахунку кількості ітерацій
    iterations = 0
    
    # Змінна для збереження верхньої межі
    upper_bound = None
    
    # Цикл виконується, поки низька межа не перевищить високу
    while low <= high:
        # Обчислюємо середній індекс
        mid = (high + low) // 2
        iterations += 1

        # Якщо значення в середині менше за x, ігноруємо ліву половину
        if arr[mid] < x:
            low = mid + 1
        # Якщо значення в середині більше за x, ігноруємо праву половину
        elif arr[mid] > x:
            upper_bound = arr[mid]  # Оновлюємо верхню межу
            high = mid - 1
        # Якщо значення в середині дорівнює x, повертаємо результат
        else:
            return (iterations, arr[mid])
    
    # Якщо елемент не знайдено, встановлюємо верхню межу
    if upper_bound is None and low < len(arr):
        upper_bound = arr[low]
    elif upper_bound is None:
        upper_bound = None  # Вказуємо, що верхньої межі немає

    return (iterations, upper_bound)

# Приклад використання:
array = [1.1, 2.2, 3.3, 4.4, 5.5]
y = 3.3
result = binary_search(array, y)
print(result)  # Очікуваний результат: (ітерації, 3.3), оскільки елемент 3.3 присутній у масиві

y = 4.0
result = binary_search(array, y)
print(result)  # Очікуваний результат: (ітерації, 4.4), оскільки 4.4 є найменшим елементом, більшим або рівним 4.0

y = 6.0
result = binary_search(array, y)
print(result)  # Очікуваний результат: (ітерації, None), оскільки немає елемента, який є більшим або рівним 6.0
